//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DataModel", "FK_Blobs_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "Blobs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.Blob), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_Images_Blobs", "Blobs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Blob), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.Image), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_ComponentsToRoles_Components", "Components", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Component), "ComponentsToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.ComponentsToRole), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_ComponentsToRoles_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "ComponentsToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.ComponentsToRole), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_ComponentsToRoles_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Role), "ComponentsToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.ComponentsToRole), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_DataLogs_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DbRepository.DataModel.Instance), "DataLogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.DataLog), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_DataLogs_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.User), "DataLogs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.DataLog), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_Images_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "Images", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.Image), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_Roles_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.Role), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "UserInstanceUsages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.UserInstanceUsage), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_UsersToRoles_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "UsersToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.UsersToRole), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_Variables_Instances", "Instances", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Instance), "Variables", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.Variable), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_UsersToRoles_Roles", "Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.Role), "UsersToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.UsersToRole), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_TemporaryCodes_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.User), "TemporaryCodes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.TemporaryCode), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_UserInstanceUsages_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.User), "UserInstanceUsages", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.UserInstanceUsage), true)]
[assembly: EdmRelationshipAttribute("DataModel", "FK_UsersToRoles_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DbRepository.DataModel.User), "UsersToRoles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DbRepository.DataModel.UsersToRole), true)]

#endregion

namespace DbRepository.DataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class JohanCornerEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new JohanCornerEntities object using the connection string found in the 'JohanCornerEntities' section of the application configuration file.
        /// </summary>
        public JohanCornerEntities() : base("name=JohanCornerEntities", "JohanCornerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JohanCornerEntities object.
        /// </summary>
        public JohanCornerEntities(string connectionString) : base(connectionString, "JohanCornerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new JohanCornerEntities object.
        /// </summary>
        public JohanCornerEntities(EntityConnection connection) : base(connection, "JohanCornerEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Blob> Blobs
        {
            get
            {
                if ((_Blobs == null))
                {
                    _Blobs = base.CreateObjectSet<Blob>("Blobs");
                }
                return _Blobs;
            }
        }
        private ObjectSet<Blob> _Blobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Component> Components
        {
            get
            {
                if ((_Components == null))
                {
                    _Components = base.CreateObjectSet<Component>("Components");
                }
                return _Components;
            }
        }
        private ObjectSet<Component> _Components;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ComponentsToRole> ComponentsToRoles
        {
            get
            {
                if ((_ComponentsToRoles == null))
                {
                    _ComponentsToRoles = base.CreateObjectSet<ComponentsToRole>("ComponentsToRoles");
                }
                return _ComponentsToRoles;
            }
        }
        private ObjectSet<ComponentsToRole> _ComponentsToRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataLog> DataLogs
        {
            get
            {
                if ((_DataLogs == null))
                {
                    _DataLogs = base.CreateObjectSet<DataLog>("DataLogs");
                }
                return _DataLogs;
            }
        }
        private ObjectSet<DataLog> _DataLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dev_InstalledScripts> dev_InstalledScripts
        {
            get
            {
                if ((_dev_InstalledScripts == null))
                {
                    _dev_InstalledScripts = base.CreateObjectSet<dev_InstalledScripts>("dev_InstalledScripts");
                }
                return _dev_InstalledScripts;
            }
        }
        private ObjectSet<dev_InstalledScripts> _dev_InstalledScripts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Image> Images
        {
            get
            {
                if ((_Images == null))
                {
                    _Images = base.CreateObjectSet<Image>("Images");
                }
                return _Images;
            }
        }
        private ObjectSet<Image> _Images;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Instance> Instances
        {
            get
            {
                if ((_Instances == null))
                {
                    _Instances = base.CreateObjectSet<Instance>("Instances");
                }
                return _Instances;
            }
        }
        private ObjectSet<Instance> _Instances;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TemporaryCode> TemporaryCodes
        {
            get
            {
                if ((_TemporaryCodes == null))
                {
                    _TemporaryCodes = base.CreateObjectSet<TemporaryCode>("TemporaryCodes");
                }
                return _TemporaryCodes;
            }
        }
        private ObjectSet<TemporaryCode> _TemporaryCodes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionSeq> TransactionSeqs
        {
            get
            {
                if ((_TransactionSeqs == null))
                {
                    _TransactionSeqs = base.CreateObjectSet<TransactionSeq>("TransactionSeqs");
                }
                return _TransactionSeqs;
            }
        }
        private ObjectSet<TransactionSeq> _TransactionSeqs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInstanceUsage> UserInstanceUsages
        {
            get
            {
                if ((_UserInstanceUsages == null))
                {
                    _UserInstanceUsages = base.CreateObjectSet<UserInstanceUsage>("UserInstanceUsages");
                }
                return _UserInstanceUsages;
            }
        }
        private ObjectSet<UserInstanceUsage> _UserInstanceUsages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersToRole> UsersToRoles
        {
            get
            {
                if ((_UsersToRoles == null))
                {
                    _UsersToRoles = base.CreateObjectSet<UsersToRole>("UsersToRoles");
                }
                return _UsersToRoles;
            }
        }
        private ObjectSet<UsersToRole> _UsersToRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Variable> Variables
        {
            get
            {
                if ((_Variables == null))
                {
                    _Variables = base.CreateObjectSet<Variable>("Variables");
                }
                return _Variables;
            }
        }
        private ObjectSet<Variable> _Variables;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Blobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBlobs(Blob blob)
        {
            base.AddObject("Blobs", blob);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Components EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponents(Component component)
        {
            base.AddObject("Components", component);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ComponentsToRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToComponentsToRoles(ComponentsToRole componentsToRole)
        {
            base.AddObject("ComponentsToRoles", componentsToRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataLogs(DataLog dataLog)
        {
            base.AddObject("DataLogs", dataLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dev_InstalledScripts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodev_InstalledScripts(dev_InstalledScripts dev_InstalledScripts)
        {
            base.AddObject("dev_InstalledScripts", dev_InstalledScripts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Images EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImages(Image image)
        {
            base.AddObject("Images", image);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Instances EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstances(Instance instance)
        {
            base.AddObject("Instances", instance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TemporaryCodes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTemporaryCodes(TemporaryCode temporaryCode)
        {
            base.AddObject("TemporaryCodes", temporaryCode);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionSeqs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionSeqs(TransactionSeq transactionSeq)
        {
            base.AddObject("TransactionSeqs", transactionSeq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInstanceUsages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInstanceUsages(UserInstanceUsage userInstanceUsage)
        {
            base.AddObject("UserInstanceUsages", userInstanceUsage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersToRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersToRoles(UsersToRole usersToRole)
        {
            base.AddObject("UsersToRoles", usersToRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Variables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVariables(Variable variable)
        {
            base.AddObject("Variables", variable);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Blob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blob : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Blob object.
        /// </summary>
        /// <param name="blobId">Initial value of the BlobId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static Blob CreateBlob(global::System.Int32 blobId, global::System.Int32 instanceId, global::System.Byte[] data)
        {
            Blob blob = new Blob();
            blob.BlobId = blobId;
            blob.InstanceId = instanceId;
            blob.Data = data;
            return blob;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlobId
        {
            get
            {
                return _BlobId;
            }
            set
            {
                if (_BlobId != value)
                {
                    OnBlobIdChanging(value);
                    ReportPropertyChanging("BlobId");
                    _BlobId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BlobId");
                    OnBlobIdChanged();
                }
            }
        }
        private global::System.Int32 _BlobId;
        partial void OnBlobIdChanging(global::System.Int32 value);
        partial void OnBlobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Blobs_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Blobs_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Blobs_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Blobs_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_Blobs_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Images_Blobs", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("DataModel.FK_Images_Blobs", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("DataModel.FK_Images_Blobs", "Images", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Component : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Component object.
        /// </summary>
        /// <param name="componentId">Initial value of the ComponentId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isReadOnlyAccess">Initial value of the IsReadOnlyAccess property.</param>
        public static Component CreateComponent(global::System.Int32 componentId, global::System.String name, global::System.Boolean isReadOnlyAccess)
        {
            Component component = new Component();
            component.ComponentId = componentId;
            component.Name = name;
            component.IsReadOnlyAccess = isReadOnlyAccess;
            return component;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentId
        {
            get
            {
                return _ComponentId;
            }
            set
            {
                if (_ComponentId != value)
                {
                    OnComponentIdChanging(value);
                    ReportPropertyChanging("ComponentId");
                    _ComponentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComponentId");
                    OnComponentIdChanged();
                }
            }
        }
        private global::System.Int32 _ComponentId;
        partial void OnComponentIdChanging(global::System.Int32 value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnlyAccess
        {
            get
            {
                return _IsReadOnlyAccess;
            }
            set
            {
                OnIsReadOnlyAccessChanging(value);
                ReportPropertyChanging("IsReadOnlyAccess");
                _IsReadOnlyAccess = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnlyAccess");
                OnIsReadOnlyAccessChanged();
            }
        }
        private global::System.Boolean _IsReadOnlyAccess;
        partial void OnIsReadOnlyAccessChanging(global::System.Boolean value);
        partial void OnIsReadOnlyAccessChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Components", "ComponentsToRoles")]
        public EntityCollection<ComponentsToRole> ComponentsToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Components", "ComponentsToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Components", "ComponentsToRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="ComponentsToRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ComponentsToRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ComponentsToRole object.
        /// </summary>
        /// <param name="componentToRoleId">Initial value of the ComponentToRoleId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="componentId">Initial value of the ComponentId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="accessLevel">Initial value of the AccessLevel property.</param>
        public static ComponentsToRole CreateComponentsToRole(global::System.Int32 componentToRoleId, global::System.Int32 instanceId, global::System.Int32 componentId, global::System.Int32 roleId, global::System.Int32 accessLevel)
        {
            ComponentsToRole componentsToRole = new ComponentsToRole();
            componentsToRole.ComponentToRoleId = componentToRoleId;
            componentsToRole.InstanceId = instanceId;
            componentsToRole.ComponentId = componentId;
            componentsToRole.RoleId = roleId;
            componentsToRole.AccessLevel = accessLevel;
            return componentsToRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentToRoleId
        {
            get
            {
                return _ComponentToRoleId;
            }
            set
            {
                if (_ComponentToRoleId != value)
                {
                    OnComponentToRoleIdChanging(value);
                    ReportPropertyChanging("ComponentToRoleId");
                    _ComponentToRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ComponentToRoleId");
                    OnComponentToRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _ComponentToRoleId;
        partial void OnComponentToRoleIdChanging(global::System.Int32 value);
        partial void OnComponentToRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ComponentId
        {
            get
            {
                return _ComponentId;
            }
            set
            {
                OnComponentIdChanging(value);
                ReportPropertyChanging("ComponentId");
                _ComponentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ComponentId");
                OnComponentIdChanged();
            }
        }
        private global::System.Int32 _ComponentId;
        partial void OnComponentIdChanging(global::System.Int32 value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessLevel
        {
            get
            {
                return _AccessLevel;
            }
            set
            {
                OnAccessLevelChanging(value);
                ReportPropertyChanging("AccessLevel");
                _AccessLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessLevel");
                OnAccessLevelChanged();
            }
        }
        private global::System.Int32 _AccessLevel;
        partial void OnAccessLevelChanging(global::System.Int32 value);
        partial void OnAccessLevelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Components", "Components")]
        public Component Component
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("DataModel.FK_ComponentsToRoles_Components", "Components").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("DataModel.FK_ComponentsToRoles_Components", "Components").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Component> ComponentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Component>("DataModel.FK_ComponentsToRoles_Components", "Components");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Component>("DataModel.FK_ComponentsToRoles_Components", "Components", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_ComponentsToRoles_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_ComponentsToRoles_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_ComponentsToRoles_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_ComponentsToRoles_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_ComponentsToRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_ComponentsToRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_ComponentsToRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("DataModel.FK_ComponentsToRoles_Roles", "Roles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="DataLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataLog object.
        /// </summary>
        /// <param name="dataLogId">Initial value of the DataLogId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="operationTime">Initial value of the OperationTime property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="recordId">Initial value of the RecordId property.</param>
        /// <param name="operation">Initial value of the Operation property.</param>
        /// <param name="details">Initial value of the Details property.</param>
        public static DataLog CreateDataLog(global::System.Int32 dataLogId, global::System.Int32 userId, global::System.DateTime operationTime, global::System.String tableName, global::System.Int32 recordId, global::System.String operation, global::System.String details)
        {
            DataLog dataLog = new DataLog();
            dataLog.DataLogId = dataLogId;
            dataLog.UserId = userId;
            dataLog.OperationTime = operationTime;
            dataLog.TableName = tableName;
            dataLog.RecordId = recordId;
            dataLog.Operation = operation;
            dataLog.Details = details;
            return dataLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataLogId
        {
            get
            {
                return _DataLogId;
            }
            set
            {
                if (_DataLogId != value)
                {
                    OnDataLogIdChanging(value);
                    ReportPropertyChanging("DataLogId");
                    _DataLogId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataLogId");
                    OnDataLogIdChanged();
                }
            }
        }
        private global::System.Int32 _DataLogId;
        partial void OnDataLogIdChanging(global::System.Int32 value);
        partial void OnDataLogIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InstanceId;
        partial void OnInstanceIdChanging(Nullable<global::System.Int32> value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime OperationTime
        {
            get
            {
                return _OperationTime;
            }
            set
            {
                OnOperationTimeChanging(value);
                ReportPropertyChanging("OperationTime");
                _OperationTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperationTime");
                OnOperationTimeChanged();
            }
        }
        private global::System.DateTime _OperationTime;
        partial void OnOperationTimeChanging(global::System.DateTime value);
        partial void OnOperationTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordId
        {
            get
            {
                return _RecordId;
            }
            set
            {
                OnRecordIdChanging(value);
                ReportPropertyChanging("RecordId");
                _RecordId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordId");
                OnRecordIdChanged();
            }
        }
        private global::System.Int32 _RecordId;
        partial void OnRecordIdChanging(global::System.Int32 value);
        partial void OnRecordIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Operation
        {
            get
            {
                return _Operation;
            }
            set
            {
                OnOperationChanging(value);
                ReportPropertyChanging("Operation");
                _Operation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Operation");
                OnOperationChanged();
            }
        }
        private global::System.String _Operation;
        partial void OnOperationChanging(global::System.String value);
        partial void OnOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Details
        {
            get
            {
                return _Details;
            }
            set
            {
                OnDetailsChanging(value);
                ReportPropertyChanging("Details");
                _Details = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Details");
                OnDetailsChanged();
            }
        }
        private global::System.String _Details;
        partial void OnDetailsChanging(global::System.String value);
        partial void OnDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TransactionNumber
        {
            get
            {
                return _TransactionNumber;
            }
            set
            {
                OnTransactionNumberChanging(value);
                ReportPropertyChanging("TransactionNumber");
                _TransactionNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionNumber");
                OnTransactionNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _TransactionNumber;
        partial void OnTransactionNumberChanging(Nullable<global::System.Int32> value);
        partial void OnTransactionNumberChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_DataLogs_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_DataLogs_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_DataLogs_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_DataLogs_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_DataLogs_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_DataLogs_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_DataLogs_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_DataLogs_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_DataLogs_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FK_DataLogs_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="dev_InstalledScripts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dev_InstalledScripts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dev_InstalledScripts object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="release">Initial value of the release property.</param>
        /// <param name="iteration">Initial value of the iteration property.</param>
        /// <param name="versionNumber">Initial value of the versionNumber property.</param>
        /// <param name="success">Initial value of the success property.</param>
        public static dev_InstalledScripts Createdev_InstalledScripts(global::System.Int32 id, global::System.DateTime date, global::System.String release, global::System.Int32 iteration, global::System.Int32 versionNumber, global::System.Boolean success)
        {
            dev_InstalledScripts dev_InstalledScripts = new dev_InstalledScripts();
            dev_InstalledScripts.id = id;
            dev_InstalledScripts.date = date;
            dev_InstalledScripts.release = release;
            dev_InstalledScripts.iteration = iteration;
            dev_InstalledScripts.versionNumber = versionNumber;
            dev_InstalledScripts.success = success;
            return dev_InstalledScripts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.DateTime _date;
        partial void OndateChanging(global::System.DateTime value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String release
        {
            get
            {
                return _release;
            }
            set
            {
                OnreleaseChanging(value);
                ReportPropertyChanging("release");
                _release = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("release");
                OnreleaseChanged();
            }
        }
        private global::System.String _release;
        partial void OnreleaseChanging(global::System.String value);
        partial void OnreleaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 iteration
        {
            get
            {
                return _iteration;
            }
            set
            {
                OniterationChanging(value);
                ReportPropertyChanging("iteration");
                _iteration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("iteration");
                OniterationChanged();
            }
        }
        private global::System.Int32 _iteration;
        partial void OniterationChanging(global::System.Int32 value);
        partial void OniterationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String dbawebPackage
        {
            get
            {
                return _dbawebPackage;
            }
            set
            {
                OndbawebPackageChanging(value);
                ReportPropertyChanging("dbawebPackage");
                _dbawebPackage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("dbawebPackage");
                OndbawebPackageChanged();
            }
        }
        private global::System.String _dbawebPackage;
        partial void OndbawebPackageChanging(global::System.String value);
        partial void OndbawebPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String filename
        {
            get
            {
                return _filename;
            }
            set
            {
                OnfilenameChanging(value);
                ReportPropertyChanging("filename");
                _filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("filename");
                OnfilenameChanged();
            }
        }
        private global::System.String _filename;
        partial void OnfilenameChanging(global::System.String value);
        partial void OnfilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 versionNumber
        {
            get
            {
                return _versionNumber;
            }
            set
            {
                OnversionNumberChanging(value);
                ReportPropertyChanging("versionNumber");
                _versionNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("versionNumber");
                OnversionNumberChanged();
            }
        }
        private global::System.Int32 _versionNumber;
        partial void OnversionNumberChanging(global::System.Int32 value);
        partial void OnversionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean success
        {
            get
            {
                return _success;
            }
            set
            {
                OnsuccessChanging(value);
                ReportPropertyChanging("success");
                _success = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("success");
                OnsuccessChanged();
            }
        }
        private global::System.Boolean _success;
        partial void OnsuccessChanging(global::System.Boolean value);
        partial void OnsuccessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String errorMessage
        {
            get
            {
                return _errorMessage;
            }
            set
            {
                OnerrorMessageChanging(value);
                ReportPropertyChanging("errorMessage");
                _errorMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("errorMessage");
                OnerrorMessageChanged();
            }
        }
        private global::System.String _errorMessage;
        partial void OnerrorMessageChanging(global::System.String value);
        partial void OnerrorMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> errorLine
        {
            get
            {
                return _errorLine;
            }
            set
            {
                OnerrorLineChanging(value);
                ReportPropertyChanging("errorLine");
                _errorLine = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("errorLine");
                OnerrorLineChanged();
            }
        }
        private Nullable<global::System.Int32> _errorLine;
        partial void OnerrorLineChanging(Nullable<global::System.Int32> value);
        partial void OnerrorLineChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Image")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Image : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Image object.
        /// </summary>
        /// <param name="imageId">Initial value of the ImageId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="blobId">Initial value of the BlobId property.</param>
        /// <param name="imageName">Initial value of the ImageName property.</param>
        /// <param name="imageType">Initial value of the ImageType property.</param>
        /// <param name="imageSize">Initial value of the ImageSize property.</param>
        public static Image CreateImage(global::System.Int32 imageId, global::System.Int32 instanceId, global::System.Int32 blobId, global::System.String imageName, global::System.String imageType, global::System.Int32 imageSize)
        {
            Image image = new Image();
            image.ImageId = imageId;
            image.InstanceId = instanceId;
            image.BlobId = blobId;
            image.ImageName = imageName;
            image.ImageType = imageType;
            image.ImageSize = imageSize;
            return image;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageId
        {
            get
            {
                return _ImageId;
            }
            set
            {
                if (_ImageId != value)
                {
                    OnImageIdChanging(value);
                    ReportPropertyChanging("ImageId");
                    _ImageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImageId");
                    OnImageIdChanged();
                }
            }
        }
        private global::System.Int32 _ImageId;
        partial void OnImageIdChanging(global::System.Int32 value);
        partial void OnImageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BlobId
        {
            get
            {
                return _BlobId;
            }
            set
            {
                OnBlobIdChanging(value);
                ReportPropertyChanging("BlobId");
                _BlobId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BlobId");
                OnBlobIdChanged();
            }
        }
        private global::System.Int32 _BlobId;
        partial void OnBlobIdChanging(global::System.Int32 value);
        partial void OnBlobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageName
        {
            get
            {
                return _ImageName;
            }
            set
            {
                OnImageNameChanging(value);
                ReportPropertyChanging("ImageName");
                _ImageName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageName");
                OnImageNameChanged();
            }
        }
        private global::System.String _ImageName;
        partial void OnImageNameChanging(global::System.String value);
        partial void OnImageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImageType
        {
            get
            {
                return _ImageType;
            }
            set
            {
                OnImageTypeChanging(value);
                ReportPropertyChanging("ImageType");
                _ImageType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImageType");
                OnImageTypeChanged();
            }
        }
        private global::System.String _ImageType;
        partial void OnImageTypeChanging(global::System.String value);
        partial void OnImageTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageSize
        {
            get
            {
                return _ImageSize;
            }
            set
            {
                OnImageSizeChanging(value);
                ReportPropertyChanging("ImageSize");
                _ImageSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageSize");
                OnImageSizeChanged();
            }
        }
        private global::System.Int32 _ImageSize;
        partial void OnImageSizeChanging(global::System.Int32 value);
        partial void OnImageSizeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Images_Blobs", "Blobs")]
        public Blob Blob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("DataModel.FK_Images_Blobs", "Blobs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("DataModel.FK_Images_Blobs", "Blobs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Blob> BlobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Blob>("DataModel.FK_Images_Blobs", "Blobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Blob>("DataModel.FK_Images_Blobs", "Blobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Images_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Images_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Images_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Images_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_Images_Instances", "Instances", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Instance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Instance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Instance object.
        /// </summary>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="instanceName">Initial value of the InstanceName property.</param>
        public static Instance CreateInstance(global::System.Int32 instanceId, global::System.String instanceName)
        {
            Instance instance = new Instance();
            instance.InstanceId = instanceId;
            instance.InstanceName = instanceName;
            return instance;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                if (_InstanceId != value)
                {
                    OnInstanceIdChanging(value);
                    ReportPropertyChanging("InstanceId");
                    _InstanceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstanceId");
                    OnInstanceIdChanged();
                }
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstanceName
        {
            get
            {
                return _InstanceName;
            }
            set
            {
                OnInstanceNameChanging(value);
                ReportPropertyChanging("InstanceName");
                _InstanceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstanceName");
                OnInstanceNameChanged();
            }
        }
        private global::System.String _InstanceName;
        partial void OnInstanceNameChanging(global::System.String value);
        partial void OnInstanceNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Blobs_Instances", "Blobs")]
        public EntityCollection<Blob> Blobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blob>("DataModel.FK_Blobs_Instances", "Blobs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blob>("DataModel.FK_Blobs_Instances", "Blobs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Instances", "ComponentsToRoles")]
        public EntityCollection<ComponentsToRole> ComponentsToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Instances", "ComponentsToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Instances", "ComponentsToRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_DataLogs_Instances", "DataLogs")]
        public EntityCollection<DataLog> DataLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataLog>("DataModel.FK_DataLogs_Instances", "DataLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataLog>("DataModel.FK_DataLogs_Instances", "DataLogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Images_Instances", "Images")]
        public EntityCollection<Image> Images
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Image>("DataModel.FK_Images_Instances", "Images");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Image>("DataModel.FK_Images_Instances", "Images", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Roles_Instances", "Roles")]
        public EntityCollection<Role> Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Role>("DataModel.FK_Roles_Instances", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Role>("DataModel.FK_Roles_Instances", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UserInstanceUsagesUsedInstanceId_Instances", "UserInstanceUsages")]
        public EntityCollection<UserInstanceUsage> UserInstanceUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInstanceUsage>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "UserInstanceUsages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInstanceUsage>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "UserInstanceUsages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Instances", "UsersToRoles")]
        public EntityCollection<UsersToRole> UsersToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Instances", "UsersToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Instances", "UsersToRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Variables_Instances", "Variables")]
        public EntityCollection<Variable> Variables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Variable>("DataModel.FK_Variables_Instances", "Variables");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Variable>("DataModel.FK_Variables_Instances", "Variables", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.Int32 instanceId, global::System.String name, global::System.Int32 type)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.InstanceId = instanceId;
            role.Name = name;
            role.Type = type;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_ComponentsToRoles_Roles", "ComponentsToRoles")]
        public EntityCollection<ComponentsToRole> ComponentsToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Roles", "ComponentsToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ComponentsToRole>("DataModel.FK_ComponentsToRoles_Roles", "ComponentsToRoles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Roles_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Roles_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Roles_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Roles_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_Roles_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Roles", "UsersToRoles")]
        public EntityCollection<UsersToRole> UsersToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Roles", "UsersToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Roles", "UsersToRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TemporaryCode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TemporaryCode : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TemporaryCode object.
        /// </summary>
        /// <param name="temporaryCodeId">Initial value of the TemporaryCodeId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="expireDate">Initial value of the ExpireDate property.</param>
        public static TemporaryCode CreateTemporaryCode(global::System.Int32 temporaryCodeId, global::System.Int32 userId, global::System.String code, global::System.DateTime expireDate)
        {
            TemporaryCode temporaryCode = new TemporaryCode();
            temporaryCode.TemporaryCodeId = temporaryCodeId;
            temporaryCode.UserId = userId;
            temporaryCode.Code = code;
            temporaryCode.ExpireDate = expireDate;
            return temporaryCode;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TemporaryCodeId
        {
            get
            {
                return _TemporaryCodeId;
            }
            set
            {
                if (_TemporaryCodeId != value)
                {
                    OnTemporaryCodeIdChanging(value);
                    ReportPropertyChanging("TemporaryCodeId");
                    _TemporaryCodeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TemporaryCodeId");
                    OnTemporaryCodeIdChanged();
                }
            }
        }
        private global::System.Int32 _TemporaryCodeId;
        partial void OnTemporaryCodeIdChanging(global::System.Int32 value);
        partial void OnTemporaryCodeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpireDate
        {
            get
            {
                return _ExpireDate;
            }
            set
            {
                OnExpireDateChanging(value);
                ReportPropertyChanging("ExpireDate");
                _ExpireDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpireDate");
                OnExpireDateChanged();
            }
        }
        private global::System.DateTime _ExpireDate;
        partial void OnExpireDateChanging(global::System.DateTime value);
        partial void OnExpireDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_TemporaryCodes_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_TemporaryCodes_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_TemporaryCodes_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_TemporaryCodes_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FK_TemporaryCodes_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="TransactionSeq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionSeq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionSeq object.
        /// </summary>
        /// <param name="transactionSeqId">Initial value of the TransactionSeqId property.</param>
        public static TransactionSeq CreateTransactionSeq(global::System.Int32 transactionSeqId)
        {
            TransactionSeq transactionSeq = new TransactionSeq();
            transactionSeq.TransactionSeqId = transactionSeqId;
            return transactionSeq;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionSeqId
        {
            get
            {
                return _TransactionSeqId;
            }
            set
            {
                if (_TransactionSeqId != value)
                {
                    OnTransactionSeqIdChanging(value);
                    ReportPropertyChanging("TransactionSeqId");
                    _TransactionSeqId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionSeqId");
                    OnTransactionSeqIdChanged();
                }
            }
        }
        private global::System.Int32 _TransactionSeqId;
        partial void OnTransactionSeqIdChanging(global::System.Int32 value);
        partial void OnTransactionSeqIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String login, global::System.String password, global::System.Boolean isActive)
        {
            User user = new User();
            user.UserId = userId;
            user.Login = login;
            user.Password = password;
            user.IsActive = isActive;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserFIO
        {
            get
            {
                return _UserFIO;
            }
            set
            {
                OnUserFIOChanging(value);
                ReportPropertyChanging("UserFIO");
                _UserFIO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserFIO");
                OnUserFIOChanged();
            }
        }
        private global::System.String _UserFIO;
        partial void OnUserFIOChanging(global::System.String value);
        partial void OnUserFIOChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationCode
        {
            get
            {
                return _RegistrationCode;
            }
            set
            {
                OnRegistrationCodeChanging(value);
                ReportPropertyChanging("RegistrationCode");
                _RegistrationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationCode");
                OnRegistrationCodeChanged();
            }
        }
        private global::System.String _RegistrationCode;
        partial void OnRegistrationCodeChanging(global::System.String value);
        partial void OnRegistrationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_DataLogs_Users", "DataLogs")]
        public EntityCollection<DataLog> DataLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataLog>("DataModel.FK_DataLogs_Users", "DataLogs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataLog>("DataModel.FK_DataLogs_Users", "DataLogs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_TemporaryCodes_Users", "TemporaryCodes")]
        public EntityCollection<TemporaryCode> TemporaryCodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TemporaryCode>("DataModel.FK_TemporaryCodes_Users", "TemporaryCodes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TemporaryCode>("DataModel.FK_TemporaryCodes_Users", "TemporaryCodes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UserInstanceUsages_Users", "UserInstanceUsages")]
        public EntityCollection<UserInstanceUsage> UserInstanceUsages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInstanceUsage>("DataModel.FK_UserInstanceUsages_Users", "UserInstanceUsages");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInstanceUsage>("DataModel.FK_UserInstanceUsages_Users", "UserInstanceUsages", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Users", "UsersToRoles")]
        public EntityCollection<UsersToRole> UsersToRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Users", "UsersToRoles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersToRole>("DataModel.FK_UsersToRoles_Users", "UsersToRoles", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UserInstanceUsage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInstanceUsage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInstanceUsage object.
        /// </summary>
        /// <param name="userInstanceUsageId">Initial value of the UserInstanceUsageId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="usedInstanceId">Initial value of the UsedInstanceId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static UserInstanceUsage CreateUserInstanceUsage(global::System.Int32 userInstanceUsageId, global::System.Int32 userId, global::System.Int32 usedInstanceId, global::System.DateTime date)
        {
            UserInstanceUsage userInstanceUsage = new UserInstanceUsage();
            userInstanceUsage.UserInstanceUsageId = userInstanceUsageId;
            userInstanceUsage.UserId = userId;
            userInstanceUsage.UsedInstanceId = usedInstanceId;
            userInstanceUsage.Date = date;
            return userInstanceUsage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserInstanceUsageId
        {
            get
            {
                return _UserInstanceUsageId;
            }
            set
            {
                if (_UserInstanceUsageId != value)
                {
                    OnUserInstanceUsageIdChanging(value);
                    ReportPropertyChanging("UserInstanceUsageId");
                    _UserInstanceUsageId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserInstanceUsageId");
                    OnUserInstanceUsageIdChanged();
                }
            }
        }
        private global::System.Int32 _UserInstanceUsageId;
        partial void OnUserInstanceUsageIdChanging(global::System.Int32 value);
        partial void OnUserInstanceUsageIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UsedInstanceId
        {
            get
            {
                return _UsedInstanceId;
            }
            set
            {
                OnUsedInstanceIdChanging(value);
                ReportPropertyChanging("UsedInstanceId");
                _UsedInstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsedInstanceId");
                OnUsedInstanceIdChanged();
            }
        }
        private global::System.Int32 _UsedInstanceId;
        partial void OnUsedInstanceIdChanging(global::System.Int32 value);
        partial void OnUsedInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_UserInstanceUsagesUsedInstanceId_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UserInstanceUsages_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UserInstanceUsages_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UserInstanceUsages_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UserInstanceUsages_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FK_UserInstanceUsages_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="UsersToRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersToRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersToRole object.
        /// </summary>
        /// <param name="userRoleId">Initial value of the UserRoleId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UsersToRole CreateUsersToRole(global::System.Int32 userRoleId, global::System.Int32 instanceId, global::System.Int32 userId, global::System.Int32 roleId)
        {
            UsersToRole usersToRole = new UsersToRole();
            usersToRole.UserRoleId = userRoleId;
            usersToRole.InstanceId = instanceId;
            usersToRole.UserId = userId;
            usersToRole.RoleId = roleId;
            return usersToRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                if (_UserRoleId != value)
                {
                    OnUserRoleIdChanging(value);
                    ReportPropertyChanging("UserRoleId");
                    _UserRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleId");
                    OnUserRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Int32 value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UsersToRoles_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UsersToRoles_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_UsersToRoles_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_UsersToRoles_Instances", "Instances", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Roles", "Roles")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_UsersToRoles_Roles", "Roles").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_UsersToRoles_Roles", "Roles").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("DataModel.FK_UsersToRoles_Roles", "Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("DataModel.FK_UsersToRoles_Roles", "Roles", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_UsersToRoles_Users", "Users")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UsersToRoles_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UsersToRoles_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DataModel.FK_UsersToRoles_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DataModel.FK_UsersToRoles_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataModel", Name="Variable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Variable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Variable object.
        /// </summary>
        /// <param name="variableId">Initial value of the VariableId property.</param>
        /// <param name="instanceId">Initial value of the InstanceId property.</param>
        /// <param name="variableKey">Initial value of the VariableKey property.</param>
        /// <param name="variableValue">Initial value of the VariableValue property.</param>
        public static Variable CreateVariable(global::System.Int32 variableId, global::System.Int32 instanceId, global::System.String variableKey, global::System.String variableValue)
        {
            Variable variable = new Variable();
            variable.VariableId = variableId;
            variable.InstanceId = instanceId;
            variable.VariableKey = variableKey;
            variable.VariableValue = variableValue;
            return variable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VariableId
        {
            get
            {
                return _VariableId;
            }
            set
            {
                if (_VariableId != value)
                {
                    OnVariableIdChanging(value);
                    ReportPropertyChanging("VariableId");
                    _VariableId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VariableId");
                    OnVariableIdChanged();
                }
            }
        }
        private global::System.Int32 _VariableId;
        partial void OnVariableIdChanging(global::System.Int32 value);
        partial void OnVariableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstanceId
        {
            get
            {
                return _InstanceId;
            }
            set
            {
                OnInstanceIdChanging(value);
                ReportPropertyChanging("InstanceId");
                _InstanceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstanceId");
                OnInstanceIdChanged();
            }
        }
        private global::System.Int32 _InstanceId;
        partial void OnInstanceIdChanging(global::System.Int32 value);
        partial void OnInstanceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VariableKey
        {
            get
            {
                return _VariableKey;
            }
            set
            {
                OnVariableKeyChanging(value);
                ReportPropertyChanging("VariableKey");
                _VariableKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VariableKey");
                OnVariableKeyChanged();
            }
        }
        private global::System.String _VariableKey;
        partial void OnVariableKeyChanging(global::System.String value);
        partial void OnVariableKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VariableValue
        {
            get
            {
                return _VariableValue;
            }
            set
            {
                OnVariableValueChanging(value);
                ReportPropertyChanging("VariableValue");
                _VariableValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VariableValue");
                OnVariableValueChanged();
            }
        }
        private global::System.String _VariableValue;
        partial void OnVariableValueChanging(global::System.String value);
        partial void OnVariableValueChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DataModel", "FK_Variables_Instances", "Instances")]
        public Instance Instance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Variables_Instances", "Instances").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Variables_Instances", "Instances").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Instance> InstanceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Instance>("DataModel.FK_Variables_Instances", "Instances");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Instance>("DataModel.FK_Variables_Instances", "Instances", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
